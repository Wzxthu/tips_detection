Progress:

Prepare:
    get a basic knowledge of CNN
    learn python language and git
    familiar with lasagne and keras and caffe
    decide to use keras
    deploy in server and computer
    take courses in Youtube

Pretreat:
    get dataset and operate 3D slicer needlefinder module
    normalize the dataset to use
    try some other methods like SVM --> decide to use CNN

Coding:
    codes in 8 parts:
    1) generate labelmaps
        exclude many void and wrong samples
        using labelmaps to extract needle tips
    2) extract tips&notips --> different spacings and patchsizes
        1-1-1 is the best
        10-10-20 is the best
        pick up the region all needles locate
        exclude the regions every tip locates
        generate random cubes from the rest part as neg samples
    3) transfer into array --> try to flatten them and data augmentation
        being flastten is better
        make a ratio of 1:3
    4) train model and validation --> try different network construction
        2D and 3D Convs
        VGG16 GoogleNet
        lessen Conv lasters
        only keep dense layer
        try to classify 3 classed --> bad results
        different envs to compare model --> choose keras
        tips&needles as positives
        detect tips --> detect whole needles  using all points on the needle to train
    WAY1:
        5-1) test model and use it on real case --> patch to case
            3 cases to test --> till no tips wrong
            pick up region in real case
            try faster-rcnn in caffe to improve speed --> fail, no proposal found
            correct evaluation method  prob -->class
        6-1) post processing --> island effect and weight
            cluster to get better results
            using different weights or max prob to find possible tips
            using region in upper layer to find top
            exclude constant line in the z-plane
            Using PCA method on the clusters we get
        Problems: too many false positives
    WAY2:
        5-2) rely on black points to establish final results
            pick up region in real case
            using region in upper layer to find top
            using indensity information and distance converge
            exclude constant line in the z-plane
            cluster and pick top parts of needle
            confidence on indensity of 'pre-tips'
        6-2) test model and use it on 'pre-tips' we find
            3 cases to test --> till no tips wrong
            adjust confidence of prob -->class
        Probelms: model cannot test some of real tips
    7) mannual segmentation code into result
        read open-source code in 3D slicer
        compare the results with the previous
    8) put forward a metric to evaluate
        try machine learning method
    9) put in into 3D slicer
        make code clearer
        employ some packages

Problems:
    it is likely that overfitting happens
    trained model is not good enough
    need more positive samples to train on

Achievement:
    clear Cases good while vague ones bad
    have got all the needles
    no need to pick up a region first

TO DO:
    find a better technique to cluster rod-shape classes
    find a good way to get tips from the middle
    choose a reasonable number of trained positives and confidence threshold
    speed up the process of clustering

Target:
    get 100% accuracy to find needletips automatically
    work well in 3D slicer
    what users will do is click and slide to pick up the region






